// Mocks generated by Mockito 5.1.0 from annotations
// in random_dog_flutter/test/features/randomdog/presentation/providers/random_dog_page_provider_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:random_dog_flutter/common/data/responses/local_response.dart'
    as _i3;
import 'package:random_dog_flutter/features/randomdog/domain/entities/dog_image.dart'
    as _i6;
import 'package:random_dog_flutter/features/randomdog/domain/repositories/random_dog_repository.dart'
    as _i2;
import 'package:random_dog_flutter/features/randomdog/domain/usecases/random_dog_image.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRandomDogRepository_0 extends _i1.Fake
    implements _i2.RandomDogRepository {}

class _FakeLocalResponse_1<T> extends _i1.Fake implements _i3.LocalResponse<T> {
}

/// A class which mocks [RandomDogImage].
///
/// See the documentation for Mockito's code generation for more information.
class MockRandomDogImage extends _i1.Mock implements _i4.RandomDogImage {
  MockRandomDogImage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RandomDogRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeRandomDogRepository_0()) as _i2.RandomDogRepository);
  @override
  _i5.Future<_i3.LocalResponse<_i6.DogImage>> randomImage(int? number) =>
      (super.noSuchMethod(Invocation.method(#randomImage, [number]),
              returnValue: Future<_i3.LocalResponse<_i6.DogImage>>.value(
                  _FakeLocalResponse_1<_i6.DogImage>()))
          as _i5.Future<_i3.LocalResponse<_i6.DogImage>>);
}
